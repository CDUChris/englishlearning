{"version":3,"file":"src_app_Sentence_Training_sentence_module_ts.js","mappings":"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","sources":["./src/app/Sentence Training/sentence-routing.module.ts","./src/app/Sentence Training/sentence.module.ts","./src/app/Sentence Training/sentence.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SentencePage } from './sentence.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SentencePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SentencePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SentencePageRoutingModule } from './sentence-routing.module';\n\nimport { SentencePage } from './sentence.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SentencePageRoutingModule\n  ],\n  declarations: [SentencePage]\n})\nexport class SentencePageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { PageBase } from '../app.page';\nimport { AppStore } from '../app.store';\nimport { LoadingController, NavController, ToastController } from '@ionic/angular';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { getStorage, ref, listAll } from \"firebase/storage\";\nimport { uploadBytes } from '@firebase/storage';\n\n@Component({\n  selector: 'app-sentence',\n  templateUrl: './sentence.page.html',\n  styleUrls: ['./sentence.page.scss'],\n})\nexport class SentencePage extends PageBase implements OnInit {\n\n  sentences = []\n  sentenceSource = []\n\n  constructor(\n    protected appStore: AppStore,\n    protected navCtrl: NavController,\n    public route: ActivatedRoute,\n    private toastController: ToastController,\n    private router: Router,\n    private loadingController: LoadingController,\n  ) {\n    super(appStore, navCtrl, route);\n  }\n\n  ngOnInit() {\n    this.fetchSentences()\n  }\n\n\n  async fetchSentences() {\n\n    // Create a reference to the file we want to download\n    const storage = getStorage();\n\n    // Get the download URL\n    const listRef = ref(storage, 'sentence');\n\n    // Find all the prefixes and items.\n    listAll(listRef)\n      .then((res) => {\n        this.sentences = this.sentenceSource = res.items.map(item => {\n          const name = item.name;\n          // 正则匹配， ([0-9]+)匹配编号，\\u4E00-\\u9FA5匹配中文，\n          // /([0-9]+).([a-zA-Z,]+).txt/ english\n          const match = /([0-9]+).([a-zA-Z\\s]+).txt/.exec(name) || {};\n          const index = match[1];\n          const title = match[2];\n          return { index,title,name, remembered:localStorage.getItem(`sentence${title}`) }\n        }).sort((a,b)=>a.index-b.index);\n      }).catch((error) => {\n        console.error(\"Error fetching sentences:\", error);\n        // Uh-oh, an error occurred!\n      });\n  }\n\n  async showLoading() {\n    const loading = await this.loadingController.create({\n      message: '上传中...',\n    });\n\n    await loading.present();\n  }\n  async hideLoading() {\n    await this.loadingController.dismiss();\n  }\n\n  async addFileChange(event) {\n    this.showLoading();\n    const file = event.target.files[0];\n    const fileName = file.name;\n\n    const storage = getStorage();\n    const storageRef = ref(storage, 'sentences/'+ fileName);\n\n    // 'file' comes from the Blob or File API\n    uploadBytes(storageRef, file).then(async (snapshot) => {\n      await this.hideLoading();\n      const toast = await this.toastController.create({\n        message: 'Upload success',\n        duration: 1500,\n        position: 'middle'\n      });\n      await toast.present();\n      this.fetchSentences();\n    });\n\n  }\n\n  onInputChange(e) {\n    const { value } = e.detail || {};\n    this.sentences = this.sentenceSource.filter((sentence) => sentence.title.indexOf(value) != -1)\n  }\n\n  onCheckboxChange(sentence,e){\n    const { title } = sentence;\n    const { detail: { checked } } = e;\n    if (checked) {\n      localStorage.setItem(`sentence${title}`, '1');\n    } else {\n      localStorage.removeItem(`sentence${title}`);\n    }\n  }\n\n  onCheckBoxClick(e){\n    e.stopPropagation()\n  }\n\n  onBack(){\n    // this.location.back()\n    this.router.navigate(['folder/Inbox'])\n  }\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}