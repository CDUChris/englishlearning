{"version":3,"file":"default-src_app_utils_player_player_ts-src_app_utils_transform_transform_ts-node_modules_js-a-e3dd52.js","mappings":"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","sources":["./src/app/utils/exception/exception.ts","./src/app/utils/player/player.ts","./src/app/utils/transform/transform.ts","./node_modules/js-audio-recorder/dist/recorder.js","./node_modules/js-audio-recorder/index.js"],"sourcesContent":["/**\r\n * 异常处理\r\n * @static\r\n * @param {*} message   错误消息\r\n */\r\nexport function throwError(message: string) {\r\n    throw new Error(message);\r\n}\r\n","import { throwError } from '../exception/exception'\r\n\r\ndeclare let window: any;\r\n\r\nlet source: any = null;\r\nlet playTime: number = 0;       // 相对时间，记录暂停位置\r\nlet playStamp: number = 0;      // 开始或暂停后开始的时间戳(绝对)\r\nlet context: any = null;\r\nlet analyser: any = null;\r\n\r\nlet audioData: any = null;\r\n// let hasInit: boolean = false;           // 是否已经初始化了\r\nlet isPaused: boolean = false;\r\nlet totalTime: number = 0;\r\nlet endplayFn: any = function() {};\r\n\r\n/**\r\n * 初始化\r\n */\r\nfunction init(): void {\r\n    context = new (window.AudioContext || window.webkitAudioContext)();\r\n    analyser = context.createAnalyser();\r\n    analyser.fftSize = 2048;                   // 表示存储频域的大小\r\n}\r\n\r\n/**\r\n * play\r\n * @returns {Promise<{}>}\r\n */\r\nfunction playAudio(): Promise<{}> {\r\n    isPaused = false;\r\n\r\n    return context.decodeAudioData(audioData.slice(0), buffer => {\r\n        source = context.createBufferSource();\r\n\r\n        source.onended = () => {\r\n            if (!isPaused) {  \r\n                totalTime = context.currentTime - playStamp + playTime;\r\n                endplayFn();\r\n            }\r\n\r\n        }\r\n\r\n\r\n        source.buffer = buffer;\r\n        source.connect(analyser);\r\n        analyser.connect(context.destination);\r\n        source.start(0, playTime);\r\n\r\n        playStamp = context.currentTime;\r\n    }, function(e) {\r\n        throwError(e);\r\n    });\r\n}\r\n\r\nfunction destroySource() {\r\n    if (source) {\r\n        source.stop();\r\n        source = null;\r\n    }\r\n}\r\n\r\nexport default class Player {\r\n    /**\r\n     * play record\r\n     * @static\r\n     * @param {ArrayBuffer} arraybuffer\r\n     * @memberof Player\r\n     */\r\n    static play(arraybuffer): Promise<{}> {\r\n        if (!context) {\r\n            init();\r\n        }\r\n        this.stopPlay();\r\n        audioData = arraybuffer;\r\n        totalTime = 0;\r\n\r\n        return playAudio();\r\n    }\r\n\r\n    /**\r\n     * 暂停播放录音\r\n     * @memberof Player\r\n     */\r\n    static pausePlay(): void {\r\n        destroySource();\r\n        playTime += context.currentTime - playStamp;\r\n        isPaused = true;\r\n    }\r\n\r\n    static resumePlay(): Promise<{}> {\r\n        return playAudio();\r\n    }\r\n\r\n    /**\r\n     * 停止播放\r\n     * @memberof Player\r\n     */\r\n    static stopPlay() {\r\n        playTime = 0;\r\n        audioData = null;\r\n\r\n        destroySource();\r\n    }\r\n\r\n    static destroyPlay() {\r\n        this.stopPlay();\r\n    }\r\n\r\n    static getAnalyseData() {\r\n        let dataArray = new Uint8Array(analyser.frequencyBinCount);\r\n        analyser.getByteTimeDomainData(dataArray);\r\n\r\n        return dataArray;\r\n    }\r\n\r\n    static addPlayEnd(fn: any = function() {}) {\r\n        endplayFn = fn;\r\n    }\r\n\r\n    // 获取已经播放的时长\r\n    static getPlayTime(): number {\r\n        let pTime = isPaused ? playTime : context.currentTime - playStamp + playTime;\r\n\r\n        return totalTime || pTime;\r\n    }\r\n}\r\n","interface dataview {\r\n    byteLength: number,\r\n    buffer: {\r\n        byteLength: number,\r\n    },\r\n    getUint8: any,\r\n}\r\n\r\n/**\r\n * 在data中的offset位置开始写入str字符串\r\n * @param {TypedArrays} data    二进制数据\r\n * @param {Number}      offset  偏移量\r\n * @param {String}      str     字符串\r\n */\r\nfunction writeString(data, offset, str): void {\r\n    for (let i = 0; i < str.length; i++) {\r\n        data.setUint8(offset + i, str.charCodeAt(i));\r\n    }\r\n}\r\n\r\n/**\r\n * 数据合并压缩\r\n * 根据输入和输出的采样率压缩数据，\r\n * 比如输入的采样率是48k的，我们需要的是（输出）的是16k的，由于48k与16k是3倍关系，\r\n * 所以输入数据中每隔3取1位\r\n *\r\n * @param {float32array} data       [-1, 1]的pcm数据\r\n * @param {number} inputSampleRate  输入采样率\r\n * @param {number} outputSampleRate 输出采样率\r\n * @returns  {float32array}         压缩处理后的二进制数据\r\n */\r\nexport function compress(data, inputSampleRate: number, outputSampleRate: number) {\r\n    // 压缩，根据采样率进行压缩\r\n    let rate = inputSampleRate / outputSampleRate,\r\n        compression = Math.max(rate, 1),\r\n        lData = data.left,\r\n        rData = data.right,\r\n        length = Math.floor(( lData.length + rData.length ) / rate),\r\n        result = new Float32Array(length),\r\n        index = 0,\r\n        j = 0;\r\n\r\n    // 循环间隔 compression 位取一位数据\r\n    while (index < length) {\r\n        // 取整是因为存在比例compression不是整数的情况\r\n        let temp = Math.floor(j);\r\n\r\n        result[index] = lData[temp];\r\n        index++;\r\n\r\n        if (rData.length) {\r\n            /*\r\n            * 双声道处理\r\n            * e.inputBuffer.getChannelData(0)得到了左声道4096个样本数据，1是右声道的数据，\r\n            * 此处需要组和成LRLRLR这种格式，才能正常播放，所以要处理下\r\n            */\r\n            result[index] = rData[temp];\r\n            index++;\r\n        }\r\n\r\n        j += compression;\r\n    }\r\n    // 返回压缩后的一维数据\r\n    return result;\r\n}\r\n\r\n/**\r\n * 转换到我们需要的对应格式的编码\r\n *\r\n * @param {float32array} bytes      pcm二进制数据\r\n * @param {number}  sampleBits      采样位数\r\n * @param {boolean} littleEdian     是否是小端字节序\r\n * @returns {dataview}              pcm二进制数据\r\n */\r\nexport function encodePCM(bytes, sampleBits: number, littleEdian: boolean = true) {\r\n    let offset = 0,\r\n        dataLength = bytes.length * (sampleBits / 8),\r\n        buffer = new ArrayBuffer(dataLength),\r\n        data = new DataView(buffer);\r\n\r\n    // 写入采样数据\r\n    if (sampleBits === 8) {\r\n        for (let i = 0; i < bytes.length; i++, offset++) {\r\n            // 范围[-1, 1]\r\n            let s = Math.max(-1, Math.min(1, bytes[i]));\r\n            // 8位采样位划分成2^8=256份，它的范围是0-255;\r\n            // 对于8位的话，负数*128，正数*127，然后整体向上平移128(+128)，即可得到[0,255]范围的数据。\r\n            let val = s < 0 ? s * 128 : s * 127;\r\n            val = +val + 128;\r\n            data.setInt8(offset, val);\r\n        }\r\n    } else {\r\n        for (let i = 0; i < bytes.length; i++, offset += 2) {\r\n            let s = Math.max(-1, Math.min(1, bytes[i]));\r\n            // 16位的划分的是2^16=65536份，范围是-32768到32767\r\n            // 因为我们收集的数据范围在[-1,1]，那么你想转换成16位的话，只需要对负数*32768,对正数*32767,即可得到范围在[-32768,32767]的数据。\r\n            data.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, littleEdian);\r\n        }\r\n    }\r\n\r\n    return data;\r\n}\r\n\r\n/**\r\n * 编码wav，一般wav格式是在pcm文件前增加44个字节的文件头，\r\n * 所以，此处只需要在pcm数据前增加下就行了。\r\n *\r\n * @param {DataView} bytes           pcm二进制数据\r\n * @param {number}  inputSampleRate  输入采样率\r\n * @param {number}  outputSampleRate 输出采样率\r\n * @param {number}  numChannels      声道数\r\n * @param {number}  oututSampleBits  输出采样位数\r\n * @param {boolean} littleEdian      是否是小端字节序\r\n * @returns {DataView}               wav二进制数据\r\n */\r\nexport function encodeWAV(bytes: dataview, inputSampleRate: number, outputSampleRate: number, numChannels: number, oututSampleBits: number, littleEdian: boolean = true) {\r\n    let sampleRate = outputSampleRate > inputSampleRate ? inputSampleRate : outputSampleRate,   // 输出采样率较大时，仍使用输入的值，\r\n        sampleBits = oututSampleBits,\r\n        buffer = new ArrayBuffer(44 + bytes.byteLength),\r\n        data = new DataView(buffer),\r\n        channelCount = numChannels, // 声道\r\n        offset = 0;\r\n\r\n    // 资源交换文件标识符\r\n    writeString(data, offset, 'RIFF'); offset += 4;\r\n    // 下个地址开始到文件尾总字节数,即文件大小-8\r\n    data.setUint32(offset, 36 + bytes.byteLength, littleEdian); offset += 4;\r\n    // WAV文件标志\r\n    writeString(data, offset, 'WAVE'); offset += 4;\r\n    // 波形格式标志\r\n    writeString(data, offset, 'fmt '); offset += 4;\r\n    // 过滤字节,一般为 0x10 = 16\r\n    data.setUint32(offset, 16, littleEdian); offset += 4;\r\n    // 格式类别 (PCM形式采样数据)\r\n    data.setUint16(offset, 1, littleEdian); offset += 2;\r\n    // 声道数\r\n    data.setUint16(offset, channelCount, littleEdian); offset += 2;\r\n    // 采样率,每秒样本数,表示每个通道的播放速度\r\n    data.setUint32(offset, sampleRate, littleEdian); offset += 4;\r\n    // 波形数据传输率 (每秒平均字节数) 声道数 × 采样频率 × 采样位数 / 8\r\n    data.setUint32(offset, channelCount * sampleRate * (sampleBits / 8), littleEdian); offset += 4;\r\n    // 快数据调整数 采样一次占用字节数 声道数 × 采样位数 / 8\r\n    data.setUint16(offset, channelCount * (sampleBits / 8), littleEdian); offset += 2;\r\n    // 采样位数\r\n    data.setUint16(offset, sampleBits, littleEdian); offset += 2;\r\n    // 数据标识符\r\n    writeString(data, offset, 'data'); offset += 4;\r\n    // 采样数据总数,即数据总大小-44\r\n    data.setUint32(offset, bytes.byteLength, littleEdian); offset += 4;\r\n\r\n    // 给wav头增加pcm体\r\n    for (let i = 0; i < bytes.byteLength;) {\r\n        data.setUint8(offset, bytes.getUint8(i));\r\n        offset++;\r\n        i++;\r\n    }\r\n\r\n    return data;\r\n}\r\n","/*!\r\n * \r\n * js-audio-recorder - js audio recorder plugin\r\n * \r\n * @version v1.0.7\r\n * @homepage https://github.com/2fps/recorder\r\n * @author 2fps <echoweb@126.com> (https://www.zhuyuntao.cn)\r\n * @license MIT\r\n *         \r\n */\r\n!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define([],e):\"object\"==typeof exports?exports.Recorder=e():t.Recorder=e()}(this,function(){return function(t){var e={};function n(i){if(e[i])return e[i].exports;var o=e[i]={i:i,l:!1,exports:{}};return t[i].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var o in t)n.d(i,o,function(e){return t[e]}.bind(null,o));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,\"a\",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p=\"\",n(n.s=1)}([function(t,e,n){\"use strict\";function i(t,e,n){for(var i=0;i<n.length;i++)t.setUint8(e+i,n.charCodeAt(i))}Object.defineProperty(e,\"__esModule\",{value:!0}),e.compress=function(t,e,n){for(var i=e/n,o=Math.max(i,1),r=t.left,a=t.right,s=Math.floor((r.length+a.length)/i),u=new Float32Array(s),c=0,l=0;c<s;){var f=Math.floor(l);u[c]=r[f],c++,a.length&&(u[c]=a[f],c++),l+=o}return u},e.encodePCM=function(t,e,n){void 0===n&&(n=!0);var i=0,o=t.length*(e/8),r=new ArrayBuffer(o),a=new DataView(r);if(8===e)for(var s=0;s<t.length;s++,i++){var u=(c=Math.max(-1,Math.min(1,t[s])))<0?128*c:127*c;u=+u+128,a.setInt8(i,u)}else for(s=0;s<t.length;s++,i+=2){var c=Math.max(-1,Math.min(1,t[s]));a.setInt16(i,c<0?32768*c:32767*c,n)}return a},e.encodeWAV=function(t,e,n,o,r,a){void 0===a&&(a=!0);var s=n>e?e:n,u=r,c=new ArrayBuffer(44+t.byteLength),l=new DataView(c),f=o,p=0;i(l,p,\"RIFF\"),p+=4,l.setUint32(p,36+t.byteLength,a),i(l,p+=4,\"WAVE\"),i(l,p+=4,\"fmt \"),p+=4,l.setUint32(p,16,a),p+=4,l.setUint16(p,1,a),p+=2,l.setUint16(p,f,a),p+=2,l.setUint32(p,s,a),p+=4,l.setUint32(p,f*s*(u/8),a),p+=4,l.setUint16(p,f*(u/8),a),p+=2,l.setUint16(p,u,a),i(l,p+=2,\"data\"),p+=4,l.setUint32(p,t.byteLength,a),p+=4;for(var d=0;d<t.byteLength;)l.setUint8(p,t.getUint8(d)),p++,d++;return l}},function(t,e,n){\"use strict\";var i,o=this&&this.__extends||(i=function(t,e){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,\"__esModule\",{value:!0});var r=n(2),a=n(0),s=n(3),u=function(t){function e(e){void 0===e&&(e={});var n=t.call(this,e)||this;return n.isrecording=!1,n.ispause=!1,n.isplaying=!1,n}return o(e,t),e.prototype.setOption=function(t){void 0===t&&(t={}),this.setNewOption(t)},e.prototype.start=function(){return this.isrecording?Promise.reject():(this.isrecording=!0,this.startRecord())},e.prototype.pause=function(){this.isrecording&&!this.ispause&&(this.ispause=!0,this.pauseRecord())},e.prototype.resume=function(){this.isrecording&&this.ispause&&(this.ispause=!1,this.resumeRecord())},e.prototype.stop=function(){this.isrecording&&(this.isrecording=!1,this.ispause=!1,this.stopRecord())},e.prototype.play=function(){this.stop(),this.isplaying=!0,this.onplay&&this.onplay(),s.default.addPlayEnd(this.onplayend);var t=this.getWAV();t.byteLength>44&&s.default.play(t.buffer)},e.prototype.getPlayTime=function(){return s.default.getPlayTime()},e.prototype.pausePlay=function(){!this.isrecording&&this.isplaying&&(this.isplaying=!1,this.onpauseplay&&this.onpauseplay(),s.default.pausePlay())},e.prototype.resumePlay=function(){this.isrecording||this.isplaying||(this.isplaying=!0,this.onresumeplay&&this.onresumeplay(),s.default.resumePlay())},e.prototype.stopPlay=function(){this.isrecording||(this.isplaying=!1,this.onstopplay&&this.onstopplay(),s.default.stopPlay())},e.prototype.destroy=function(){return s.default.destroyPlay(),this.destroyRecord()},e.prototype.getRecordAnalyseData=function(){return this.getAnalyseData()},e.prototype.getPlayAnalyseData=function(){return s.default.getAnalyseData()},e.prototype.getPCM=function(){this.stop();var t=this.getData();return t=a.compress(t,this.inputSampleRate,this.outputSampleRate),a.encodePCM(t,this.oututSampleBits,this.littleEdian)},e.prototype.getPCMBlob=function(){return new Blob([this.getPCM()])},e.prototype.downloadPCM=function(t){void 0===t&&(t=\"recorder\");var e=this.getPCMBlob();r.downloadPCM(e,t)},e.prototype.getWAV=function(){var t=this.getPCM();return a.encodeWAV(t,this.inputSampleRate,this.outputSampleRate,this.config.numChannels,this.oututSampleBits,this.littleEdian)},e.prototype.getWAVBlob=function(){return new Blob([this.getWAV()],{type:\"audio/wav\"})},e.prototype.downloadWAV=function(t){void 0===t&&(t=\"recorder\");var e=this.getWAVBlob();r.downloadWAV(e,t)},e.prototype.download=function(t,e,n){r.download(t,e,n)},e.prototype.getChannelData=function(){var t=this.getPCM(),e=t.byteLength,n=this.littleEdian,i={left:null,right:null};if(2===this.config.numChannels){var o=new DataView(new ArrayBuffer(e/2)),r=new DataView(new ArrayBuffer(e/2));if(16===this.config.sampleBits)for(var a=0;a<e/2;a+=2)o.setInt16(a,t.getInt16(2*a,n),n),r.setInt16(a,t.getInt16(2*a+2,n),n);else for(a=0;a<e/2;a+=2)o.setInt8(a,t.getInt8(2*a)),r.setInt8(a,t.getInt8(2*a+1));i.left=o,i.right=r}else i.left=t;return i},e}(n(5).default);e.default=u},function(t,e,n){\"use strict\";function i(t,e,n){var i=document.createElement(\"a\");i.href=window.URL.createObjectURL(t),i.download=e+\".\"+n,i.click()}Object.defineProperty(e,\"__esModule\",{value:!0}),e.downloadWAV=function(t,e){void 0===e&&(e=\"recorder\"),i(t,e,\"wav\")},e.downloadPCM=function(t,e){void 0===e&&(e=\"recorder\"),i(t,e,\"pcm\")},e.download=function(t,e,n){return i(t,e,n)}},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var i=n(4),o=null,r=0,a=0,s=null,u=null,c=null,l=!1,f=0,p=function(){};function d(){return l=!1,s.decodeAudioData(c.slice(0),function(t){(o=s.createBufferSource()).onended=function(){l||(f=s.currentTime-a+r,p())},o.buffer=t,o.connect(u),u.connect(s.destination),o.start(0,r),a=s.currentTime},function(t){i.throwError(t)})}function h(){o&&(o.stop(),o=null)}var y=function(){function t(){}return t.play=function(t){return s||(s=new(window.AudioContext||window.webkitAudioContext),(u=s.createAnalyser()).fftSize=2048),this.stopPlay(),c=t,f=0,d()},t.pausePlay=function(){h(),r+=s.currentTime-a,l=!0},t.resumePlay=function(){return d()},t.stopPlay=function(){r=0,c=null,h()},t.destroyPlay=function(){this.stopPlay()},t.getAnalyseData=function(){var t=new Uint8Array(u.frequencyBinCount);return u.getByteTimeDomainData(t),t},t.addPlayEnd=function(t){void 0===t&&(t=function(){}),p=t},t.getPlayTime=function(){var t=l?r:s.currentTime-a+r;return f||t},t}();e.default=y},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.throwError=function(t){throw new Error(t)}},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var i=n(0),o=function(){function t(e){void 0===e&&(e={}),this.size=0,this.lBuffer=[],this.rBuffer=[],this.tempPCM=[],this.inputSampleBits=16,this.fileSize=0,this.duration=0,this.needRecord=!0;var n,i=new(window.AudioContext||window.webkitAudioContext);this.inputSampleRate=i.sampleRate,this.setNewOption(e),this.littleEdian=(n=new ArrayBuffer(2),new DataView(n).setInt16(0,256,!0),256===new Int16Array(n)[0]),t.initUserMedia()}return t.prototype.setNewOption=function(t){void 0===t&&(t={}),this.config={sampleBits:~[8,16].indexOf(t.sampleBits)?t.sampleBits:16,sampleRate:~[8e3,11025,16e3,22050,24e3,44100,48e3].indexOf(t.sampleRate)?t.sampleRate:this.inputSampleRate,numChannels:~[1,2].indexOf(t.numChannels)?t.numChannels:1},this.outputSampleRate=this.config.sampleRate,this.oututSampleBits=this.config.sampleBits},t.prototype.startRecord=function(){var t=this;return this.context&&this.destroyRecord(),this.initRecorder(),navigator.mediaDevices.getUserMedia({audio:!0}).then(function(e){t.audioInput=t.context.createMediaStreamSource(e),t.stream=e}).then(function(){t.audioInput.connect(t.analyser),t.analyser.connect(t.recorder),t.recorder.connect(t.context.destination)})},t.prototype.pauseRecord=function(){this.needRecord=!1},t.prototype.resumeRecord=function(){this.needRecord=!0},t.prototype.stopRecord=function(){this.audioInput&&this.audioInput.disconnect(),this.source&&this.source.stop(),this.recorder.disconnect(),this.analyser.disconnect(),this.needRecord=!0},t.prototype.destroyRecord=function(){return this.clearRecordStatus(),this.stopStream(),this.closeAudioContext()},t.prototype.getAnalyseData=function(){var t=new Uint8Array(this.analyser.frequencyBinCount);return this.analyser.getByteTimeDomainData(t),t},t.prototype.getData=function(){return this.flat()},t.prototype.clearRecordStatus=function(){this.lBuffer.length=0,this.rBuffer.length=0,this.size=0,this.fileSize=0,this.PCM=null,this.audioInput=null,this.duration=0},t.prototype.flat=function(){var t=null,e=new Float32Array(0);1===this.config.numChannels?t=new Float32Array(this.size):(t=new Float32Array(this.size/2),e=new Float32Array(this.size/2));for(var n=0,i=0;i<this.lBuffer.length;i++)t.set(this.lBuffer[i],n),n+=this.lBuffer[i].length;n=0;for(i=0;i<this.rBuffer.length;i++)e.set(this.rBuffer[i],n),n+=this.rBuffer[i].length;return{left:t,right:e}},t.prototype.initRecorder=function(){var t=this;this.clearRecordStatus(),this.context=new(window.AudioContext||window.webkitAudioContext),this.analyser=this.context.createAnalyser(),this.analyser.fftSize=2048;var e=this.context.createScriptProcessor||this.context.createJavaScriptNode;this.recorder=e.apply(this.context,[4096,this.config.numChannels,this.config.numChannels]),this.recorder.onaudioprocess=function(e){if(t.needRecord){var n,i=e.inputBuffer.getChannelData(0),o=null;t.lBuffer.push(new Float32Array(i)),t.size+=i.length,2===t.config.numChannels&&(o=e.inputBuffer.getChannelData(1),t.rBuffer.push(new Float32Array(o)),t.size+=o.length),t.fileSize=Math.floor(t.size/Math.max(t.inputSampleRate/t.outputSampleRate,1))*(t.oututSampleBits/8),n=100*Math.max.apply(Math,i),t.duration+=4096/t.inputSampleRate,t.onprocess&&t.onprocess(t.duration),t.onprogress&&t.onprogress({duration:t.duration,fileSize:t.fileSize,vol:n})}}},t.prototype.stopStream=function(){this.stream&&this.stream.getTracks&&(this.stream.getTracks().forEach(function(t){return t.stop()}),this.stream=null)},t.prototype.closeAudioContext=function(){return this.context&&this.context.close&&\"closed\"!==this.context.state?this.context.close():new Promise(function(t){t()})},t.initUserMedia=function(){void 0===navigator.mediaDevices&&(navigator.mediaDevices={}),void 0===navigator.mediaDevices.getUserMedia&&(navigator.mediaDevices.getUserMedia=function(t){var e=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia;return e?new Promise(function(n,i){e.call(navigator,t,n,i)}):Promise.reject(new Error(\"浏览器不支持 getUserMedia !\"))})},t.prototype.transformIntoPCM=function(t,e){var n=new Float32Array(t),o=new Float32Array(e),r=i.compress({left:n,right:o},this.inputSampleRate,this.outputSampleRate);return i.encodePCM(r,this.oututSampleBits,this.littleEdian)},t.getPermission=function(){return this.initUserMedia(),navigator.mediaDevices.getUserMedia({audio:!0}).then(function(t){t&&t.getTracks().forEach(function(t){return t.stop()})})},t}();e.default=o}]).default});\r\n","module.exports = require(\"./dist/recorder.js\");\r\n"],"names":[],"sourceRoot":"webpack:///"}